# -*- coding: utf-8 -*-
"""Predicting Customer Retention with Logistic Regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eehZLdM9GmrB_kpYGNV_L41oRtp83CAz
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder

# load data
customer = pd.read_csv('WA_Fn-UseC_-Telco-Customer-Churn.csv')

customer

# Check if there is null values
customer.isnull().sum()

# Show info and describe
customer.info()
customer.describe()

# change TotalCharges to numeric
customer['TotalCharges'] = pd.to_numeric(customer['TotalCharges'], errors='coerce')

customer.columns

binary_cols = [
    'gender','MultipleLines','InternetService','OnlineBackup','Contract','PaymentMethod','TotalCharges','Churn'
]
le = LabelEncoder()
for col in binary_cols:
    customer[col] = le.fit_transform(customer[col])

counts = customer['Churn'].value_counts()
plt.bar(x=counts.index,height=counts.values)
plt.title('Customer Churn Count')
plt.xlabel('Churn')
plt.ylabel('Number of Customers')
plt.show()

plt.pie(counts,
    labels=counts.index,
    autopct='%1.1f%%',
    colors=['skyblue', 'lightcoral']
      )
plt.show()

sns.boxplot(data=customer,x='MonthlyCharges',y='Churn')
plt.show()

# Create a model
logistic_model = LogisticRegression()

# features and labels
X = customer.drop(['Churn','customerID'],axis=1)
y= customer['Churn']

# data splitting proces
X_train , X_test , y_train , y_test = train_test_split(X,y,test_size=0.2,random_state=42)

# Train model
logistic_model.fit(X_train,y_train)

y_predictions = logistic_model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_predictions))

